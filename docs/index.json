[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "lib/tupelo.js",
    "content": "var cbor = require(\"cbor\");\n\nvar fs = require(\"fs\");\nvar net = require(\"net\");\nvar grpc = require(\"@grpc/grpc-js\");\nvar protoLoader = require(\"@grpc/proto-loader\");\n\nvar TUPELO_PROTO_FILE = __dirname + \"/proto/tupelo_rpc.proto\";\n\nvar tupeloPackageDefinition = protoLoader.loadSync(TUPELO_PROTO_FILE, {});\nvar tupeloPackage = grpc\n    .loadPackageDefinition(tupeloPackageDefinition)\n    .walletrpc;\n\nconst promiseAroundRpcCallback = (toExec) => {\n  return new Promise((resolve, reject) => {\n    var clbk = (err, response) => {\n      if (err == null) {\n        resolve(response);\n      } else {\n        reject(err);\n      }\n    };\n    toExec(clbk);\n  });\n};\n\n/**\n * Represents a connection to a specific Tupelo wallet managed by a remote\n * Tupelo RPC server\n */\nclass TupeloClient {\n  constructor(walletServer, walletCreds) {\n    /**\n     * The URL (\"host:port\") of the RPC wallet server to connect to\n     *\n     * @type {string}\n     */\n    this.walletServer = walletServer;\n\n    /**\n     * The name and passphrase of the wallet to connect to\n     *\n     * @type {WalletCredentials}\n     */\n    this.walletCreds = walletCreds;\n    /**\n     * @typedef {Object} WalletCredentials\n     * @property {string} walletName - Wallet name\n     * @property {string} passPhrase - Wallet passphrase\n     */\n\n\n    /**\n     * Back end Tupelo Wallet RPC service connection\n     *\n     * @type {WalletRPCService}\n     */\n    this.rpc = new tupeloPackage\n      .WalletRPCService(walletServer, grpc.credentials.createInsecure());\n\n  }\n\n  /**\n   * Register a new tupelo chain tree wallet.\n   *\n   * @return {Promise<RegisterWalletResponse, RpcError>}\n   */\n  registerWallet() {\n    return promiseAroundRpcCallback((clbk) => {\n      this.rpc.registerWallet({ creds: this.walletCreds }, clbk);\n    });\n  }\n  /**\n   * @typedef {Object} RegisterWalletResponse\n   * @property {string} walletName - The name of the newly registered wallet\n   */\n\n  /**\n   * Generate a new chain tree ownership key pair.\n   *\n   * @return {Promise<GenerateKeyResponse, RpcError>}\n   */\n  generateKey() {\n    return promiseAroundRpcCallback((clbk) => {\n      this.rpc.generateKey({ creds: this.walletCreds }, clbk);\n    });\n  }\n  /**\n   * @typedef {Object} GenerateKeyResponse\n   * @property {string} keyAddr - Public key address\n   */\n\n\n  /**\n   * List the addresses of the keys associated with the connected wallet.\n   *\n   * @return {Promise<ListKeysResponse, RpcError>}\n   */\n  listKeys() {\n    return promiseAroundRpcCallback((clbk) => {\n      this.rpc.listKeys({ creds: this.walletCreds }, clbk);\n    });\n  }\n  /**\n   * @typedef {Object} ListKeysResponse\n   * @property {string[]} keyAddrs - Public key addresses associated with the connected wallet.\n   */\n\n\n  /**\n   * Create a new chain tree owned by the key at `keyAddr`.\n   *\n   * @param {string} keyAddr - Address of the key that owns the new chain tree.\n   * @return {Promise<CreateChainResponse, RpcError>}\n   */\n  createChainTree(keyAddr) {\n    return promiseAroundRpcCallback((clbk) => {\n      this.rpc.createChainTree({\n        creds: this.walletCreds,\n        keyAddr: keyAddr\n      }, clbk);\n    });\n  }\n  /**\n   * @typedef {Object} CreateChainResponse\n   * @property {string} chainId - The ID of the new chain tree\n   */\n\n  /**\n   * Get a Base58 serialized chain tree Export\n   *\n   * @param {string} chainId - The ID of the chain tree to be exported\n   *\n   * @return {Promise<ExportChainTreeResponse, RpcError>}\n   */\n  exportChainTree(chainId) {\n    return promiseAroundRpcCallback((clbk) => {\n      this.rpc.exportChainTree({\n        creds: this.walletCreds,\n        chainId: chainId\n      }, clbk);\n    });\n  }\n  /**\n   * @typedef {Object} ExportChainTreeResponse\n   * @property {SerializedChainTree} chainTree - The serialized chain tree\n   */\n\n\n  /**\n   * Import a serialized chain tree and save it to the wallet.\n   *\n   * @param {string} keyAddr - Address of the key that owns the new chain tree.\n   * @param {SerializedChaintree} chainTree - Serialized chain tree to import\n   */\n  importChainTree(keyAddr, chainTree) {\n    return promiseAroundRpcCallback((clbk) => {\n      this.rpc.importChainTree({\n        creds: this.walletCreds,\n        keyAddr: keyAddr,\n        chainTree: chainTree\n      }, clbk);\n    });\n   }\n\n  /**\n   * List the IDs of the chain trees associated with the connected wallet.\n   *\n   * @return {Promise<ListChainIdsResponse, RpcError>}\n   */\n  listChainIds() {\n    return promiseAroundRpcCallback((clbk) => {\n      this.rpc.listChainIds({ creds: this.walletCreds }, clbk);\n    });\n  }\n  /**\n   * @typedef {Object} ListChainIdsResponse\n   * @property {string[]} chainIds - Chain tree IDs associated with this wallet.\n   */\n\n\n  /**\n   * Get the latest tip (as known by the Tupelo network signers) of the chain\n   * tree with id `chainId`\n   *\n   * @param {string} chainId - The ID of the chain tree.\n   *\n   * @return {Promise<GetTipResponse, RpcError>}\n   */\n  getTip(chainId) {\n    return promiseAroundRpcCallback((clbk) => {\n      this.rpc.getTip({ creds: this.walletCreds, chainId: chainId }, clbk);\n    });\n  }\n  /**\n   * @typedef {Object} GetTipResponse\n   * @property {string} tip - The chain tree tip as known by the Tupelo signers\n   */\n\n\n  /**\n   * Store data on a chain tree with a transaction validated by the network's\n   * notary group.\n   *\n   * @param {string} chainId - The ID of the chain tree to store the data on.\n   * @param {string} keyAddr - Address of the key that owns the chain tree.\n   * @param {string} path - '/' delimited path into the chain tree to store the data\n   * @param {string} value - The data to store.\n   *\n   * @return {Promise<SetDataResponse, RpcError>}\n   */\n  setData(chainId, keyAddr, path, value) {\n    return promiseAroundRpcCallback((clbk) => {\n      var cborData = cbor.Encoder.encode(value);\n      this.rpc.setData({\n        creds: this.walletCreds,\n        chainId: chainId,\n        keyAddr: keyAddr,\n        path: path,\n        value: cborData,\n      }, clbk);\n    });\n  }\n  /**\n   * @typedef {Object} SetDataResponse\n   * @property {string} tip - The chain tree tip after the transaction.\n   */\n\n\n  /**\n   * Resolve data stored in a specific chain tree path.\n   *\n   * @param {string} chainId - The ID of the chain tree to retrieve the data from.\n   * @param {string} path - '/' delimited path into the chain tree where the data is stored\n   */\n  resolve(chainId, path) {\n    return new Promise((resolve, reject) => {\n      var clbk = (err, response) => {\n        if (err == null) {\n          cbor.Decoder.decodeAll(response.data)\n            .then((decoded) => {\n              response.data = decoded;\n              resolve(response);\n            },(err) => {\n              reject(err);\n            });\n        } else {\n          reject(err);\n        }\n      };\n\n      this.rpc.resolve({\n        creds: this.walletCreds,\n        chainId: chainId,\n        path: path,\n      }, clbk);\n    });\n  }\n  /**\n   * @typedef {Object} ResolveResponse\n   * @property {string} remainingPath - The path remaining after retrieving the data\n   * @property {Object} data - The data retrieved\n   */\n\n  /**\n   * Add the keys specified by `newOwnerKeys` to the set of owners of the chain\n   * tree with id `chainId` in a transaction, and register that transaction with\n   * the notary group\n   *\n   * @param {string} chainId - The ID of the chain tree.\n   * @param {string} keyAddr - Address of a key that currently owns the chain tree.\n   * @param {string[]} newOwnerKeys - List of key addresses for the new owners\n   *\n   * @return {Promise<SetOwnerResponse, RpcError>}\n   */\n  setOwner(chainId, keyAddr, newOwnerKeys) {\n    return promiseAroundRpcCallback((clbk) => {\n      this.rpc.setOwner({\n        creds: this.walletCreds,\n        chainId: chainId,\n        keyAddr: keyAddr,\n        newOwnerKeys: newOwnerKeys,\n      }, clbk);\n    });\n  }\n  /**\n   * @typedef {Object} SetOwnerResponse\n   * @property {string} tip - The chain tree tip after the transaction.\n   */\n\n\n  /**\n   * Establish a new coin type associated with a chain tree.\n   *\n   * @param {string} chainId - The ID of the chain tree.\n   * @param {string} keyAddr - Address of a key that currently owns the chain tree.\n   * @param {string} coinName - Name of the new coin\n   * @param {number} maximum - Maximum number of coins of this type that can exist\n   *\n   * @return {Promise<EstablishCoinResponse, RpcError>}\n   */\n  establishCoin(chainId, keyAddr, coinName, maximum) {\n    return promiseAroundRpcCallback((clbk) => {\n      this.rpc.establishCoin({\n        creds: this.walletCreds,\n        chainId: chainId,\n        keyAddr: keyAddr,\n        coinName: coinName,\n        maximum: maximum,\n      }, clbk);\n    });\n  }\n  /**\n   * @typedef {Object} EstablishCoinResponse\n   * @property {string} tip - The chain tree tip after the transaction.\n   */\n\n\n  /**\n   * Mint new coins of an already established coin type associated with a chain\n   * tree.\n   *\n   * @param {string} chainId - The ID of the chain tree.\n   * @param {string} keyAddr - Address of a key that currently owns the chain tree.\n   * @param {string} coinName - Name of the coin type\n   * @param {number} amount - Number of coins to mint.\n   *\n   * @return {Promise<MintCoinResponse, RpcError>}\n   */\n  mintCoin(chainId, keyAddr, coinName, amount) {\n    return promiseAroundRpcCallback((clbk) => {\n      this.rpc.mintCoin({\n        creds: this.walletCreds,\n        chainId: chainId,\n        keyAddr: keyAddr,\n        coinName: coinName,\n        amount: amount,\n      }, clbk);\n    });\n  }\n  /**\n   * @typedef {Object} MintCoinResponse\n   * @property {string} tip - The chain tree tip after the transaction.\n   */\n\n  /**\n   * @typedef {Object} SerializedChainTree\n   * @property {string[]} dag - base58 encoded string array representing the chain tree dag nodes\n   * @property {Map<String, SerializedSignature>} signatures - Map of serialized signatures\n   */\n\n  /**\n   * @typedef {Object} SerializedSignature\n   * @property {boolean[]} signers - Array indicating which signers have signed\n   * @property {string} signature - base58 encoded signature\n   * @property {string} type - Signature type\n   */\n\n  /**\n   * @typedef {Object} RpcError - gRPC error object\n   * @property {number} code - A [gRPC status](https://grpc.io/grpc/node/grpc.html#.status)\n   * @property {string} details - Details about the error\n   * @property {?Object} metadata - Additional information about the error\n   */\n}\n\n/**\n * Connect to a Tupelo wallet managed by a remote Tupelo RPC server.\n *\n * @param {string} walletServer - \"host:port\" string of the RPC wallet server\n * @param {Object} walletCreds - Credentials for the connecting wallet\n * @param {string} walletCreds.walletName - Wallet name\n * @param {string} walletCreds.passPhrase - Wallet passphrase\n *\n * @return {TupeloClient} Tupelo client connection.\n */\nfunction connect(walletServer, walletCreds) {\n  return new TupeloClient(walletServer, walletCreds);\n}\n\nexports.TupeloClient = TupeloClient;\nexports.connect = connect;\n",
    "static": true,
    "longname": "/home/zonotope/code/quorum/tupelo.js/lib/tupelo.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "TUPELO_PROTO_FILE",
    "memberof": "lib/tupelo.js",
    "static": true,
    "longname": "lib/tupelo.js~TUPELO_PROTO_FILE",
    "access": "public",
    "export": false,
    "importPath": "tupelo-client",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "tupeloPackageDefinition",
    "memberof": "lib/tupelo.js",
    "static": true,
    "longname": "lib/tupelo.js~tupeloPackageDefinition",
    "access": "public",
    "export": false,
    "importPath": "tupelo-client",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "tupeloPackage",
    "memberof": "lib/tupelo.js",
    "static": true,
    "longname": "lib/tupelo.js~tupeloPackage",
    "access": "public",
    "export": false,
    "importPath": "tupelo-client",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "promiseAroundRpcCallback",
    "memberof": "lib/tupelo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/tupelo.js~promiseAroundRpcCallback",
    "access": "public",
    "export": false,
    "importPath": "tupelo-client",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "toExec",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 53,
    "kind": "class",
    "name": "TupeloClient",
    "memberof": "lib/tupelo.js",
    "static": true,
    "longname": "lib/tupelo.js~TupeloClient",
    "access": "public",
    "export": true,
    "importPath": "tupelo-client",
    "importStyle": "{TupeloClient}",
    "description": "Represents a connection to a specific Tupelo wallet managed by a remote\nTupelo RPC server",
    "lineNumber": 32,
    "interface": false
  },
  {
    "__docId__": 54,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/tupelo.js~TupeloClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/tupelo.js~TupeloClient#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "walletServer",
    "memberof": "lib/tupelo.js~TupeloClient",
    "static": false,
    "longname": "lib/tupelo.js~TupeloClient#walletServer",
    "access": "public",
    "description": "The URL (\"host:port\") of the RPC wallet server to connect to",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "walletCreds",
    "memberof": "lib/tupelo.js~TupeloClient",
    "static": false,
    "longname": "lib/tupelo.js~TupeloClient#walletCreds",
    "access": "public",
    "description": "The name and passphrase of the wallet to connect to",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "WalletCredentials"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 57,
    "kind": "typedef",
    "name": "WalletCredentials",
    "memberof": "lib/tupelo.js~TupeloClient",
    "static": true,
    "longname": "lib/tupelo.js~TupeloClient.WalletCredentials",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "walletName",
        "description": "Wallet name"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "passPhrase",
        "description": "Wallet passphrase"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "WalletCredentials"
    }
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "rpc",
    "memberof": "lib/tupelo.js~TupeloClient",
    "static": false,
    "longname": "lib/tupelo.js~TupeloClient#rpc",
    "access": "public",
    "description": "Back end Tupelo Wallet RPC service connection",
    "lineNumber": 59,
    "type": {
      "nullable": null,
      "types": [
        "WalletRPCService"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "registerWallet",
    "memberof": "lib/tupelo.js~TupeloClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/tupelo.js~TupeloClient#registerWallet",
    "access": "public",
    "description": "Register a new tupelo chain tree wallet.",
    "lineNumber": 69,
    "return": {
      "nullable": null,
      "types": [
        "Promise<RegisterWalletResponse, RpcError>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 60,
    "kind": "typedef",
    "name": "RegisterWalletResponse",
    "memberof": "lib/tupelo.js~TupeloClient",
    "static": true,
    "longname": "lib/tupelo.js~TupeloClient.RegisterWalletResponse",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "walletName",
        "description": "The name of the newly registered wallet"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "RegisterWalletResponse"
    }
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "generateKey",
    "memberof": "lib/tupelo.js~TupeloClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/tupelo.js~TupeloClient#generateKey",
    "access": "public",
    "description": "Generate a new chain tree ownership key pair.",
    "lineNumber": 84,
    "return": {
      "nullable": null,
      "types": [
        "Promise<GenerateKeyResponse, RpcError>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 62,
    "kind": "typedef",
    "name": "GenerateKeyResponse",
    "memberof": "lib/tupelo.js~TupeloClient",
    "static": true,
    "longname": "lib/tupelo.js~TupeloClient.GenerateKeyResponse",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "keyAddr",
        "description": "Public key address"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "GenerateKeyResponse"
    }
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "listKeys",
    "memberof": "lib/tupelo.js~TupeloClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/tupelo.js~TupeloClient#listKeys",
    "access": "public",
    "description": "List the addresses of the keys associated with the connected wallet.",
    "lineNumber": 100,
    "return": {
      "nullable": null,
      "types": [
        "Promise<ListKeysResponse, RpcError>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 64,
    "kind": "typedef",
    "name": "ListKeysResponse",
    "memberof": "lib/tupelo.js~TupeloClient",
    "static": true,
    "longname": "lib/tupelo.js~TupeloClient.ListKeysResponse",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "keyAddrs",
        "description": "Public key addresses associated with the connected wallet."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ListKeysResponse"
    }
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "createChainTree",
    "memberof": "lib/tupelo.js~TupeloClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/tupelo.js~TupeloClient#createChainTree",
    "access": "public",
    "description": "Create a new chain tree owned by the key at `keyAddr`.",
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "keyAddr",
        "description": "Address of the key that owns the new chain tree."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<CreateChainResponse, RpcError>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 66,
    "kind": "typedef",
    "name": "CreateChainResponse",
    "memberof": "lib/tupelo.js~TupeloClient",
    "static": true,
    "longname": "lib/tupelo.js~TupeloClient.CreateChainResponse",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "chainId",
        "description": "The ID of the new chain tree"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "CreateChainResponse"
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "exportChainTree",
    "memberof": "lib/tupelo.js~TupeloClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/tupelo.js~TupeloClient#exportChainTree",
    "access": "public",
    "description": "Get a Base58 serialized chain tree Export",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "chainId",
        "description": "The ID of the chain tree to be exported"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<ExportChainTreeResponse, RpcError>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 68,
    "kind": "typedef",
    "name": "ExportChainTreeResponse",
    "memberof": "lib/tupelo.js~TupeloClient",
    "static": true,
    "longname": "lib/tupelo.js~TupeloClient.ExportChainTreeResponse",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "SerializedChainTree"
        ],
        "spread": false,
        "optional": false,
        "name": "chainTree",
        "description": "The serialized chain tree"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ExportChainTreeResponse"
    }
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "importChainTree",
    "memberof": "lib/tupelo.js~TupeloClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/tupelo.js~TupeloClient#importChainTree",
    "access": "public",
    "description": "Import a serialized chain tree and save it to the wallet.",
    "lineNumber": 157,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "keyAddr",
        "description": "Address of the key that owns the new chain tree."
      },
      {
        "nullable": null,
        "types": [
          "SerializedChaintree"
        ],
        "spread": false,
        "optional": false,
        "name": "chainTree",
        "description": "Serialized chain tree to import"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "listChainIds",
    "memberof": "lib/tupelo.js~TupeloClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/tupelo.js~TupeloClient#listChainIds",
    "access": "public",
    "description": "List the IDs of the chain trees associated with the connected wallet.",
    "lineNumber": 172,
    "return": {
      "nullable": null,
      "types": [
        "Promise<ListChainIdsResponse, RpcError>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 71,
    "kind": "typedef",
    "name": "ListChainIdsResponse",
    "memberof": "lib/tupelo.js~TupeloClient",
    "static": true,
    "longname": "lib/tupelo.js~TupeloClient.ListChainIdsResponse",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "chainIds",
        "description": "Chain tree IDs associated with this wallet."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ListChainIdsResponse"
    }
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "getTip",
    "memberof": "lib/tupelo.js~TupeloClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/tupelo.js~TupeloClient#getTip",
    "access": "public",
    "description": "Get the latest tip (as known by the Tupelo network signers) of the chain\ntree with id `chainId`",
    "lineNumber": 191,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "chainId",
        "description": "The ID of the chain tree."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<GetTipResponse, RpcError>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 73,
    "kind": "typedef",
    "name": "GetTipResponse",
    "memberof": "lib/tupelo.js~TupeloClient",
    "static": true,
    "longname": "lib/tupelo.js~TupeloClient.GetTipResponse",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tip",
        "description": "The chain tree tip as known by the Tupelo signers"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "GetTipResponse"
    }
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "setData",
    "memberof": "lib/tupelo.js~TupeloClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/tupelo.js~TupeloClient#setData",
    "access": "public",
    "description": "Store data on a chain tree with a transaction validated by the network's\nnotary group.",
    "lineNumber": 213,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "chainId",
        "description": "The ID of the chain tree to store the data on."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "keyAddr",
        "description": "Address of the key that owns the chain tree."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "'/' delimited path into the chain tree to store the data"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The data to store."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<SetDataResponse, RpcError>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 75,
    "kind": "typedef",
    "name": "SetDataResponse",
    "memberof": "lib/tupelo.js~TupeloClient",
    "static": true,
    "longname": "lib/tupelo.js~TupeloClient.SetDataResponse",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tip",
        "description": "The chain tree tip after the transaction."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "SetDataResponse"
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "resolve",
    "memberof": "lib/tupelo.js~TupeloClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/tupelo.js~TupeloClient#resolve",
    "access": "public",
    "description": "Resolve data stored in a specific chain tree path.",
    "lineNumber": 237,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "chainId",
        "description": "The ID of the chain tree to retrieve the data from."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "'/' delimited path into the chain tree where the data is stored"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "typedef",
    "name": "ResolveResponse",
    "memberof": "lib/tupelo.js~TupeloClient",
    "static": true,
    "longname": "lib/tupelo.js~TupeloClient.ResolveResponse",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "remainingPath",
        "description": "The path remaining after retrieving the data"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The data retrieved"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ResolveResponse"
    }
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "setOwner",
    "memberof": "lib/tupelo.js~TupeloClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/tupelo.js~TupeloClient#setOwner",
    "access": "public",
    "description": "Add the keys specified by `newOwnerKeys` to the set of owners of the chain\ntree with id `chainId` in a transaction, and register that transaction with\nthe notary group",
    "lineNumber": 277,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "chainId",
        "description": "The ID of the chain tree."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "keyAddr",
        "description": "Address of a key that currently owns the chain tree."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "newOwnerKeys",
        "description": "List of key addresses for the new owners"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<SetOwnerResponse, RpcError>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 79,
    "kind": "typedef",
    "name": "SetOwnerResponse",
    "memberof": "lib/tupelo.js~TupeloClient",
    "static": true,
    "longname": "lib/tupelo.js~TupeloClient.SetOwnerResponse",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tip",
        "description": "The chain tree tip after the transaction."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "SetOwnerResponse"
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "establishCoin",
    "memberof": "lib/tupelo.js~TupeloClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/tupelo.js~TupeloClient#establishCoin",
    "access": "public",
    "description": "Establish a new coin type associated with a chain tree.",
    "lineNumber": 303,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "chainId",
        "description": "The ID of the chain tree."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "keyAddr",
        "description": "Address of a key that currently owns the chain tree."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "coinName",
        "description": "Name of the new coin"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "maximum",
        "description": "Maximum number of coins of this type that can exist"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<EstablishCoinResponse, RpcError>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 81,
    "kind": "typedef",
    "name": "EstablishCoinResponse",
    "memberof": "lib/tupelo.js~TupeloClient",
    "static": true,
    "longname": "lib/tupelo.js~TupeloClient.EstablishCoinResponse",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tip",
        "description": "The chain tree tip after the transaction."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "EstablishCoinResponse"
    }
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "mintCoin",
    "memberof": "lib/tupelo.js~TupeloClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/tupelo.js~TupeloClient#mintCoin",
    "access": "public",
    "description": "Mint new coins of an already established coin type associated with a chain\ntree.",
    "lineNumber": 331,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "chainId",
        "description": "The ID of the chain tree."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "keyAddr",
        "description": "Address of a key that currently owns the chain tree."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "coinName",
        "description": "Name of the coin type"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": "Number of coins to mint."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<MintCoinResponse, RpcError>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 83,
    "kind": "typedef",
    "name": "MintCoinResponse",
    "memberof": "lib/tupelo.js~TupeloClient",
    "static": true,
    "longname": "lib/tupelo.js~TupeloClient.MintCoinResponse",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tip",
        "description": "The chain tree tip after the transaction."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "MintCoinResponse"
    }
  },
  {
    "__docId__": 84,
    "kind": "typedef",
    "name": "SerializedChainTree",
    "memberof": "lib/tupelo.js~TupeloClient",
    "static": true,
    "longname": "lib/tupelo.js~TupeloClient.SerializedChainTree",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "dag",
        "description": "base58 encoded string array representing the chain tree dag nodes"
      },
      {
        "nullable": null,
        "types": [
          "Map<String, SerializedSignature>"
        ],
        "spread": false,
        "optional": false,
        "name": "signatures",
        "description": "Map of serialized signatures"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "SerializedChainTree"
    }
  },
  {
    "__docId__": 85,
    "kind": "typedef",
    "name": "SerializedSignature",
    "memberof": "lib/tupelo.js~TupeloClient",
    "static": true,
    "longname": "lib/tupelo.js~TupeloClient.SerializedSignature",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean[]"
        ],
        "spread": false,
        "optional": false,
        "name": "signers",
        "description": "Array indicating which signers have signed"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "signature",
        "description": "base58 encoded signature"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Signature type"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "SerializedSignature"
    }
  },
  {
    "__docId__": 86,
    "kind": "typedef",
    "name": "RpcError",
    "memberof": "lib/tupelo.js~TupeloClient",
    "static": true,
    "longname": "lib/tupelo.js~TupeloClient.RpcError",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "code",
        "description": "A [gRPC status](https://grpc.io/grpc/node/grpc.html#.status)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "details",
        "description": "Details about the error"
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "metadata",
        "description": "Additional information about the error"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "RpcError"
    }
  },
  {
    "__docId__": 87,
    "kind": "function",
    "name": "connect",
    "memberof": "lib/tupelo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/tupelo.js~connect",
    "access": "public",
    "export": true,
    "importPath": "tupelo-client",
    "importStyle": "{connect}",
    "description": "Connect to a Tupelo wallet managed by a remote Tupelo RPC server.",
    "lineNumber": 378,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "walletServer",
        "description": "\"host:port\" string of the RPC wallet server"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "walletCreds",
        "description": "Credentials for the connecting wallet"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "walletCreds.walletName",
        "description": "Wallet name"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "walletCreds.passPhrase",
        "description": "Wallet passphrase"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TupeloClient"
      ],
      "spread": false,
      "description": "Tupelo client connection."
    }
  },
  {
    "kind": "index",
    "content": "# Tupelo.js\nA Node.js API client to both manage Tupelo chain trees, and submit chain tree\ntransactions to a notary group for verification through connecting with a Tupelo\nRPC server.\n\n## Installation and Usage\nBasic installation and usage instructions are below. Visit the full\n[API Documentation](https://quorumcontrol.github.io/tupelo.js/) for more.\n\n### RPC Server\nThe Node.js client cannot directly manage chain trees or connect to the notary\ngroup, so node applications must instead proxy through an RPC server to work\nwith Tupelo.\n\n#### Installation\nTo install the server, first contact us to get a Tupelo binary for your platform\nand save it within your command `PATH` variable. If you do not wish to save the\nbinary in your `PATH`, you can still execute it with the fully qualified or\nrelative path to your chosen location for the binary.\n\n#### Usage\nYou can run the RPC server by invoking `qc3` along with the necessary options.\n\n##### Connecting to a Local Notary Group\nTo get started quickly for local development, simply run:\n```shell\nqc3 rpc-server --local-network 3\n```\n\nThis will spin up a 3 signer local, in-memory notary group after first\ngenerating three random keypairs for the group to use. Then it will start the\nRPC server and bind it to the local notary group. Note that restarting the\nserver will remove all data stored by the local notary group signers! (You may\nstill have some retained application state.)\n\n##### Connecting to the Tupelo Alpha Test Network\nTo connect to the Tupelo alpha test network notary group, contact us to get the\npublic key file corresponding to the running network. Then you can start the\nserver and bind it to the notary group with:\n```shell\nqc3 rpc-server --bootstrap-keys <public key file>\n```\n\n##### Other Options\n`qc3` also includes a help command that lists the available options and their\ndescriptions:\n```shell\n% > ./qc3 help rpc-server\nLaunches a Tupelo RPC Server\n\nUsage:\n  qc3 rpc-server [flags]\n\nFlags:\n  -k, --bootstrap-keys string   which public keys to bootstrap the notary groups with\n  -h, --help                    help for rpc-server\n  -l, --local-network int       Run local network with randomly generated keys, specifying number of nodes as argument. Mutually exlusive with bootstrap-*\n  -t, --tls                     Encrypt connections with TLS/SSL\n  -C, --tls-cert string         TLS certificate file\n  -K, --tls-key string          TLS private key file\n```\n\n### Node.js Client\n\n#### Installation\nYou can install Tupelo.js with npm. Run the following command from your\nproject's directory to add Tupelo.js to the npm project's dependencies.\n\n```shell\nnpm install tupelo-client\n```\n\n#### Usage\nOnce you have installed the dependency, require the `tupelo-client` module from\nyour application.\n\n```javascript\nvar tupelo = require('tupelo-client');\n```\n\n##### Wallet Credentials\nThe RPC server stores all the chain trees it has access to in an encrypted\nwallet with a unique name and secret pass phrase. You must initialize the client\nwith the correct wallet credentials for the wallet you'd like to unlock for each\nRPC request. The wallet credentials should be an\n[WalletCredentials object](https://quorumcontrol.github.io/tupelo.js/typedef/index.html#static-typedef-WalletCredentials) with\n`walletName` and `passPhrase` keys.\n\n```javascript\nvar walletCreds = {\n    walletName: 'my-wallet',\n    passPhrase: 'super secret password'\n};\n```\n\n##### Obtaining an RPC client connection\nThe `connect` function takes the host:port string of the RPC server and the\nwallet credentials object as arguments and returns an RPC client connection.\n\n```javascript\nvar client = tupelo.connect('localhost:50051', walletCreds);\n```\n\n##### Using the API\nHere is how to create a new key and then a chain tree owned by that key as an\nexample. See the [API docs](https://quorumcontrol.github.io/tupelo.js/) for more information about the\nfull Tupelo.js API.\n\n```javascript\n// save the key address and chain tree id for later use\nvar keyAddr, chainId;\n\n// generate the key and chain tree\nclient.generateKey()\n  .then(function(generateKeyResult) {\n    keyAddr = generateKeyResult.keyAddr;\n    return client.createChainTree(keyAddr);\n  }, function(err) {\n    console.log(\"-----------Error generating key:----------\");\n    console.log(err);\n  }).then(function(createChainResponse) {\n    chainId = createChainResponse.chainId;\n    console.log(\"----------Chain ID:----------\");\n    console.log(chainId);\n    return chainId;\n  }, function(err) {\n    console.log(\"-----------Error creating chain tree:----------\");\n    console.log(err);\n  });\n```\n",
    "longname": "/home/zonotope/code/quorum/tupelo.js/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"tupelo-client\",\n  \"version\": \"0.0.1-alpha1\",\n  \"description\": \"Tupelo JavaScript client\",\n  \"main\": \"lib/tupelo.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/QuorumControl/tupelo.js.git\"\n  },\n  \"author\": \"Quorum Control\",\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/QuorumControl/tupelo.js/issues\"\n  },\n  \"homepage\": \"https://github.com/QuorumControl/tupelo.js#readme\",\n  \"dependencies\": {\n    \"@grpc/grpc-js\": \"~0.2.0\",\n    \"@grpc/proto-loader\": \"~0.3.0\",\n    \"cbor\": \"^4.1.1\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-node\": \"^1.0.3\",\n    \"esdoc-standard-plugin\": \"^1.0.0\"\n  }\n}\n",
    "longname": "/home/zonotope/code/quorum/tupelo.js/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]